version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: vpn_bot
      POSTGRES_USER: vpnuser
      POSTGRES_PASSWORD: vpnpass
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  bot:
    build: .
    restart: always
    environment:
      - DB_URL=postgresql://vpnuser:vpnpass@db:5432/vpn_bot
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - YOOKASSA_SHOP_ID=${YOOKASSA_SHOP_ID}
      - YOOKASSA_SECRET_KEY=${YOOKASSA_SECRET_KEY}
      - YOOKASSA_WEBHOOK_URL=${YOOKASSA_WEBHOOK_URL}
      - TELEGRAM_PAYMENTS_TOKEN=${TELEGRAM_PAYMENTS_TOKEN}
    depends_on:
      - db

  webhook:
    build: .
    command: uvicorn api.yookassa_webhook:app --host 0.0.0.0 --port 8000
    restart: always
    environment:
      - DB_URL=postgresql://vpnuser:vpnpass@db:5432/vpn_bot
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - YOOKASSA_SHOP_ID=${YOOKASSA_SHOP_ID}
      - YOOKASSA_SECRET_KEY=${YOOKASSA_SECRET_KEY}
      - YOOKASSA_WEBHOOK_URL=${YOOKASSA_WEBHOOK_URL}
      - TELEGRAM_PAYMENTS_TOKEN=${TELEGRAM_PAYMENTS_TOKEN}
    depends_on:
      - db
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backup:
    image: postgres:15
    depends_on:
      - db
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "while true; do
        pg_dump -U vpnuser -h db vpn_bot > /backup/backup_$(date +%Y%m%d_%H%M%S).sql;
        sleep 86400;
      done"
    environment:
      - PGPASSWORD=vpnpass
    volumes:
      - ./backups:/backup

volumes:
  db_data: 